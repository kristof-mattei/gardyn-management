[workspace]
resolver = "2"
members = ["crates/*"]

[workspace.lints.clippy]
# don't stop from compiling / running
all = "warn"
cargo = "warn"
complexity = "warn"
correctness = "warn"
pedantic = "warn"
perf = "warn"
# restriction = "warn"
style = "warn"
suspicious = "warn"

# this one causes confusion when combining variables (`foo`) and
# dereferenced variables (`foo.bar`). The latter cannot be inlined
# so we don't inline anything
uninlined-format-args = { level = "allow", priority = 127 }

[workspace.lints.rust]
let_underscore_drop = { level = "deny", priority = 127 }
non_ascii_idents = { level = "deny", priority = 127 }

# [package]
# name = "gardyn-management"
# # don't change this, it's updated before an actual build by update-version.sh
# version = "0.0.0-development"
# edition = "2021"
# rust-version = "1.84.0"
# authors = ["Kristof Mattei"]
# description = "Gardyn Management"
# license-file = "LICENSE"
# categories = ["fun"]
# keywords = ["random"]
# repository = "https://github.com/kristof-mattei/gardyn-management"

# [lib]
# name = "gardyn_management"
# path = "crates/website/src/lib.rs"

# [[bin]]
# name = "gardyn-management"
# path = "crates/website/src/main.rs"

# [[bin]]
# name = "gardyn-management-seed"
# path = "crates/website/src/bin/seed.rs"

# [lints.clippy]
# # don't stop from compiling / running
# all = "warn"
# cargo = "warn"
# complexity = "warn"
# correctness = "warn"
# pedantic = "warn"
# perf = "warn"
# # restriction = "warn"
# style = "warn"
# suspicious = "warn"

# # this one causes confusion when combining variables (`foo`) and
# # dereferenced variables (`foo.bar`). The latter cannot be inlined
# # so we don't inline anything
# uninlined-format-args = { level = "allow", priority = 127 }

# [lints.rust]
# let_underscore_drop = { level = "deny", priority = 127 }
# non_ascii_idents = { level = "deny", priority = 127 }

# [[test]]
# name = "gardyn-management"
# path = "crates/website/tests/integration_tests.rs"

# [features]
# default = []
# tokio-console = []

# [dependencies]
# axum = { version = "0.8.1", features = ["macros"] }
# axum-proxy = { version = "0.3.0", features = ["axum"] }
# color-eyre = { git = "https://github.com/eyre-rs/eyre", rev = "c4ee249f7c51dc6452e8704ae8d117d90d6eeebc" }
# console-subscriber = "0.4.1"
# futures-util = "0.3.31"
# serde = { version = "1.0.217", features = ["derive"] }
# serde_json = "1.0.138"
# tokio = { version = "1.43.0", features = [
#     "rt-multi-thread",
#     "macros",
#     "time",
#     "signal",
# ] }
# tokio-util = { version = "0.7.13", features = ["rt"] }
# tracing = "0.1.41"
# tracing-error = "0.2.1"
# tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }
# tower = "0.5.2"
# tower-http = { version = "0.6.2", features = ["cors", "fs", "trace"] }
# url = { version = "2.5.3", features = ["serde"] }
# diesel-async = { version = "0.5.2", features = ["deadpool", "postgres"] }
# diesel = { version = "2.2.6", features = ["chrono", "postgres"] }
# byteorder = "1.5.0"
# dotenvy = "0.15.7"
# chrono = "0.4.39"

# # We compile the Docker container with musl to get a static library. Smaller, faster.
# # BUT that means that we need to include openssl
# # Documentation on the syntax:
# # https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#platform-specific-dependencies
# [target.'cfg(all(any(target_arch="x86_64", target_arch="aarch64"), target_os="linux", target_env="musl"))'.dependencies]
# openssl = { version = "0.10.69", features = ["vendored"] }
